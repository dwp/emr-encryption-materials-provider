  # Java Gradle CircleCI 2.0 configuration file
  #
  # Check https://circleci.com/docs/2.0/language-java/ for more details
  #
  version: 2.1

  orbs:
    snyk: snyk/snyk@0.0.8

  jobs:
    build:
      docker:
        # specify the version you desire here
        - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

      working_directory: ~/repo

      environment:
        # Customize the JVM maximum heap limit
        JVM_OPTS: -Xmx3200m
        TERM: dumb

      steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "build.gradle" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-

        - run:
            name: run gradle
            command: |
              INFO=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest")
              LATEST_VERSION= $(echo INFO | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' || true)
              [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
              VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
              sed -i s/version=.*/version=$VERSION/ gradle.properties
              ./gradlew build shadow
        - save_cache:
            paths:
              - ~/.gradle
            key: v1-dependencies-{{ checksum "build.gradle" }}

        - run:
            name: mkdir for artifact
            command: |
              mkdir artifacts
              cp build/libs/encryption-materials-provider-*.jar ./artifacts/
        - persist_to_workspace:
            root: artifacts
            paths:
              - encryption-materials-provider-*.jar

    snyk-pr:
      docker:
        - image: circleci/openjdk:8-jdk
      steps:
        - checkout
        - snyk/scan:
            organization: dwp-dataworks
            severity-threshold: high
            target-file: build.gradle
            project: '${CIRCLE_PROJECT_REPONAME}/pr-kotlin'

    snyk-master:
      docker:
        - image: circleci/openjdk:8-jdk
      steps:
        - checkout
        - snyk/scan:
            organization: dwp-dataworks
            severity-threshold: high
            target-file: build.gradle
            project: '${CIRCLE_PROJECT_REPONAME}/master-kotlin'


    publish-github-release:
      docker:
        - image: cibuilds/github:0.10
      steps:
        - attach_workspace:
            at: ./artifacts
        - run:
            name: "Publish Release on GitHub"
            command: |
              set -u
              set -o pipefail
              ls -l ./artifacts
              INFO=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest")
              LATEST_VERSION= $(echo INFO | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' || true)
              [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
              VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
              ghr \
                -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} -delete \
                ${VERSION} ./artifacts/
  workflows:
    version: 2
    build-and-deploy:
      jobs:
        - build
        - snyk-pr:
            requires:
              - build
            filters:
              branches:
                ignore: master
        - snyk-master:
            requires:
              - build
            filters:
              branches:
                only: master
        - publish-github-release:
            requires:
              - build
            filters:
              branches:
                only: master
